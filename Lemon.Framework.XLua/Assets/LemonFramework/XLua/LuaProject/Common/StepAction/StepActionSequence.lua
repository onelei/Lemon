---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by onelei.
--- DateTime: 2020/8/23 16:26
---


---@class StepActionSequence
local BTNodeComposite = require("Common.BT.BTNodeComposite")
local StepActionSequence = class("StepActionSequence",BTNodeComposite)

function StepActionSequence:ctor(Opts)
    BTNodeComposite.ctor(self,Opts)
    self:Reset()
end

function StepActionSequence:DoAction()
    if self.Children == nil or #self.Children == 0 then
        return LuaDef.BTResult.SUCCESSFUL
    end

    local childCount = #self.Children
    if self.__NodeIndex > childCount then
        self:Reset()
    end

    local result
    for i = self.__NodeIndex, childCount do
        self.__NodeIndex = i
        local action = self.Children[i]
        if action then
            result =  action:DoAction()
            if result == LuaDef.BTResult.FAIL then
                self:Reset()
                return LuaDef.BTResult.FAIL
            end
            if result == LuaDef.BTResult.RUNNING then
                return LuaDef.BTResult.RUNNING
            end
            ---next
            if result == LuaDef.BTResult.SUCCESSFUL then
                self:Remove(action)
                self:Reset()
                return LuaDef.BTResult.RUNNING
            end
        end
    end

    self:Reset()
    return LuaDef.BTResult.SUCCESSFUL
end


function StepActionSequence:Reset()
    self.__NodeIndex = 1
end

return StepActionSequence