---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by onelei.
--- DateTime: 2020/8/22 15:03
---
---* Selector Node
---* 当执行本类型Node时，它将从begin到end迭代执行自己的Child Node:
---* 如遇到一个Child Node执行后返回True，那停止迭代
---* 本Node向自己的Parent Node也返回True；否则所有Child Node都返回False
---* 那本Node向自己的Parent Node返回False

---@class BTNodeSelect
local BTNodeComposite = require("Common.BT.BTNodeComposite")
local BTNodeSelect = class("BTNodeSelect",BTNodeComposite)

function BTNodeSelect:ctor(Opts)
    BTNodeComposite.ctor(self,Opts)
    self:Reset()
end

function BTNodeSelect:DoAction()
    if self.Children == nil or #self.Children == 0 then
        return LuaDef.BTResult.SUCCESSFUL
    end

    local childCount = #self.Children
    if self.__NodeIndex > childCount then
        self:Reset()
    end

    local result
    for i = self.__NodeIndex, childCount do
        self.__NodeIndex = i

        local action = self.Children[i]
        if action then
            result =  action:DoAction()
            if result == LuaDef.BTResult.SUCCESSFUL then
                self:Reset()
                return LuaDef.BTResult.SUCCESSFUL
            end
            if result == LuaDef.BTResult.RUNNING then
                return LuaDef.BTResult.RUNNING
            end
        end
    end

    self:Reset()
    return LuaDef.BTResult.FAIL
end


function BTNodeSelect:Reset()
    self.__NodeIndex = 1
end

return BTNodeSelect