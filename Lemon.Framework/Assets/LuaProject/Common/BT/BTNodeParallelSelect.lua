---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by onelei.
--- DateTime: 2020/8/22 13:03
---
---* Parallel Node
---* 并发执行它的所有Child Node.
---* 而向Parent Node返回的值和Parallel Node所采取的具体策略相关;
---* Parallel Selector Node:一False则返回False,全True才返回True.

---@class BTNodeParallelSelect
local BTParallel = require("Common.BT.BTNodeParallel")
local BTNodeParallelSelect = class("BTNodeParallelSelect",BTParallel)

function BTNodeParallelSelect:ctor(Opts)
    BTParallel.ctor(self,Opts)
    self:Reset()
end

function BTNodeParallelSelect:DoAction()

    if self.Children == nil or #self.Children == 0 then
        return LuaDef.BTResult.SUCCESSFUL
    end

    local result
    local childCount = #self.Children
    for i = 1, childCount do
        local action = self.Children[i]
        if action then
            result =  action:DoAction()
            if result == LuaDef.BTResult.FAIL then
                self.__bFail = true
            end
            if result == LuaDef.BTResult.RUNNING then
               table.insert(self.__WaitNodes,#self.__WaitNodes,action)
            end
        end
    end

    if #self.__WaitNodes > 0 then
        return LuaDef.BTResult.RUNNING
    end

    if self.__bFail then
        result = LuaDef.BTResult.FAIL
    else
        result = LuaDef.BTResult.SUCCESSFUL
    end

    self:Reset()

    return result
end

function BTNodeParallelSelect:Reset()
    self.__WaitNodes = {}
    self.__bFail = false
end

return BTNodeParallelSelect